{"version":3,"sources":["webpack:///./src/views/study/Test.vue?2ed8","webpack:///src/views/study/Test.vue","webpack:///./src/views/study/Test.vue?14d6","webpack:///./src/views/study/Test.vue","webpack:///./src/views/study/Test.vue?d92d","webpack:///./src/views/study/components/NoEnterprise.vue?d50b","webpack:///./src/views/study/Test.vue?20eb","webpack:///./src/utils/learningMethod.js","webpack:///./src/views/study/components/NoEnterprise.vue?51f1","webpack:///src/views/study/components/NoEnterprise.vue","webpack:///./src/views/study/components/NoEnterprise.vue?72a6","webpack:///./src/views/study/components/NoEnterprise.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","questionList","_v","_s","$route","query","title","class","name","getTime","mtsUserRecord","exam_start_at","exam_end_at","score","_e","errorNum","length","parseInt","_l","item","idx","key","domProps","stem","type","attrs","model","value","answers","callback","$$v","$set","expression","option","index","getResultColor","on","$event","setOptions","_id","commitQuestion","reTest","finishTest","staticRenderFns","components","NoEnterprise","data","minute","timer","options","questions","noTest","reQuestionList","isReset","computed","start","end","time","Math","ceil","abs","i","watch","handler","console","log","newName","oldName","immediate","created","getQuestion","getTestResult","$store","state","study","start_test_time","Date","mounted","setInterval","self","methods","id","lesson_column","beforeRouteLeave","next","component","getDateInfo","date","y","getFullYear","m","getMonth","d","getDate","h","getHours","min","getMinutes","s","getSeconds","days","floor","leave1","hours","leave2","minutes","getNowFormatDate","seperator1","seperator2","month","strDate","currentdate","indexOf","_m"],"mappings":"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","file":"static/js/chunk-429d4f84.93a40e52.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"question-test\"},[(_vm.questionList.length)?[_c('h4',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.query.title))]),_c('div',{staticClass:\"time\",class:this.$route.name === 'testAnswer' ? 'end-time' : ''},[_c('p',{staticClass:\"second\",class:this.$route.name !== 'testAnswer' ? 'start-second' : ''},[_vm._v(\"\\n        考试用时：\"+_vm._s(_vm.getTime(_vm.mtsUserRecord.exam_start_at, _vm.mtsUserRecord.exam_end_at))+\"分钟\\n      \")]),(this.$route.name === 'testAnswer')?_c('p',{staticClass:\"score\"},[_vm._v(\"\\n        分数：\"+_vm._s(_vm.mtsUserRecord.score || 0)+\"分\\n      \")]):_vm._e(),(this.$route.name === 'testAnswer')?_c('p',{staticClass:\"error\"},[_vm._v(\"\\n        错题数：\"+_vm._s(_vm.errorNum)+\"个\\n      \")]):_vm._e()]),_c('p',{staticClass:\"tip-sign\"},[_vm._v(\"\\n      不定项选择题 (共\"+_vm._s(_vm.questionList.length)+\"道题，每题\"+_vm._s(parseInt(100 / _vm.questionList.length) || 0)+\"分)\\n    \")]),_c('div',{staticClass:\"question-list\"},_vm._l((_vm.questionList),function(item,idx){return _c('div',{key:idx,staticClass:\"item\"},[_c('p',{staticClass:\"stem\"},[_vm._v(\"\\n          \"+_vm._s(idx + 1)+\".\\n          \"),_c('span',{domProps:{\"innerHTML\":_vm._s(item.stem)}})]),(item.type === 'checkbox')?_c('el-checkbox-group',{attrs:{\"size\":\"small\",\"disabled\":_vm.$route.name === 'testAnswer'},model:{value:(_vm.answers[idx]),callback:function ($$v) {_vm.$set(_vm.answers, idx, $$v)},expression:\"answers[idx]\"}},_vm._l((item.options),function(option){return _c('el-checkbox',{key:option.index,class:_vm.getResultColor(option.index, idx),attrs:{\"label\":option.index},on:{\"change\":function($event){return _vm.setOptions(option.index, idx, item._id, item)}}},[(_vm.getResultColor(option.index, idx) === 'error')?_c('svg',{staticClass:\"icon test-icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-btn-pic-closex-copy\"}})]):_vm._e(),(_vm.getResultColor(option.index, idx) === 'success')?_c('svg',{staticClass:\"icon test-icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-ico-jkda-xzx\"}})]):_vm._e(),_c('span',[_vm._v(_vm._s(option.index + 1))]),_vm._v(\".\\n            \"),_c('span',{domProps:{\"innerHTML\":_vm._s(option.item)}})])}),1):_vm._e(),(item.type === 'radio')?_c('el-radio-group',{attrs:{\"size\":\"small\",\"disabled\":_vm.$route.name === 'testAnswer'},model:{value:(_vm.answers[idx]),callback:function ($$v) {_vm.$set(_vm.answers, idx, $$v)},expression:\"answers[idx]\"}},_vm._l((item.options),function(option,index){return _c('el-radio',{key:index,class:_vm.getResultColor(index, idx),attrs:{\"label\":index},on:{\"change\":function($event){return _vm.setOptions(index, idx, item._id)}}},[(_vm.getResultColor(option.index, idx) === 'error')?_c('svg',{staticClass:\"icon test-icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-btn-pic-closex-copy\"}})]):_vm._e(),(_vm.getResultColor(option.index, idx) === 'success')?_c('svg',{staticClass:\"icon test-icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-ico-jkda-xzx\"}})]):_vm._e(),_c('span',[_vm._v(_vm._s(index + 1))]),_vm._v(\".\\n            \"),_c('span',{domProps:{\"innerHTML\":_vm._s(option.item)}})])}),1):_vm._e()],1)}),0),_c('div',{staticClass:\"commit-btn\"},[(_vm.$route.name === 'test')?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.commitQuestion}},[_vm._v(\"提交\")]):_vm._e(),(_vm.$route.name === 'testAnswer')?_c('el-button',{on:{\"click\":_vm.reTest}},[_vm._v(\"重新测试\")]):_vm._e(),(_vm.$route.name === 'testAnswer')?_c('el-button',{on:{\"click\":_vm.finishTest}},[_vm._v(\"完成\")]):_vm._e()],1)]:_vm._e(),(_vm.noTest)?_c('no-enterprise'):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"question-test\">\r\n    <template v-if=\"questionList.length\">\r\n      <h4 class=\"title\">{{ $route.query.title }}</h4>\r\n      <div\r\n        class=\"time\"\r\n        :class=\"this.$route.name === 'testAnswer' ? 'end-time' : ''\"\r\n      >\r\n        <p\r\n          class=\"second\"\r\n          :class=\"this.$route.name !== 'testAnswer' ? 'start-second' : ''\"\r\n        >\r\n          考试用时：{{\r\n            getTime(mtsUserRecord.exam_start_at, mtsUserRecord.exam_end_at)\r\n          }}分钟\r\n        </p>\r\n        <p v-if=\"this.$route.name === 'testAnswer'\" class=\"score\">\r\n          分数：{{ mtsUserRecord.score || 0 }}分\r\n        </p>\r\n        <p v-if=\"this.$route.name === 'testAnswer'\" class=\"error\">\r\n          错题数：{{ errorNum }}个\r\n        </p>\r\n      </div>\r\n      <p class=\"tip-sign\">\r\n        不定项选择题 (共{{ questionList.length }}道题，每题{{\r\n          parseInt(100 / questionList.length) || 0\r\n        }}分)\r\n      </p>\r\n      <div class=\"question-list\">\r\n        <div v-for=\"(item, idx) of questionList\" :key=\"idx\" class=\"item\">\r\n          <p class=\"stem\">\r\n            {{ idx + 1 }}.\r\n            <span v-html=\"item.stem\" />\r\n          </p>\r\n          <el-checkbox-group\r\n            v-if=\"item.type === 'checkbox'\"\r\n            v-model=\"answers[idx]\"\r\n            size=\"small\"\r\n            :disabled=\"$route.name === 'testAnswer'\"\r\n          >\r\n            <el-checkbox\r\n              v-for=\"option of item.options\"\r\n              :key=\"option.index\"\r\n              :label=\"option.index\"\r\n              :class=\"getResultColor(option.index, idx)\"\r\n              @change=\"setOptions(option.index, idx, item._id, item)\"\r\n            >\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'error'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-btn-pic-closex-copy\" />\r\n              </svg>\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'success'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-ico-jkda-xzx\" />\r\n              </svg>\r\n              <span>{{ option.index + 1 }}</span\r\n              >.\r\n              <span v-html=\"option.item\" />\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n          <el-radio-group\r\n            v-if=\"item.type === 'radio'\"\r\n            v-model=\"answers[idx]\"\r\n            size=\"small\"\r\n            :disabled=\"$route.name === 'testAnswer'\"\r\n          >\r\n            <el-radio\r\n              v-for=\"(option, index) of item.options\"\r\n              :key=\"index\"\r\n              :label=\"index\"\r\n              :class=\"getResultColor(index, idx)\"\r\n              @change=\"setOptions(index, idx, item._id)\"\r\n            >\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'error'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-btn-pic-closex-copy\" />\r\n              </svg>\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'success'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-ico-jkda-xzx\" />\r\n              </svg>\r\n              <span>{{ index + 1 }}</span\r\n              >.\r\n              <span v-html=\"option.item\" />\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </div>\r\n      </div>\r\n      <div class=\"commit-btn\">\r\n        <el-button\r\n          v-if=\"$route.name === 'test'\"\r\n          type=\"primary\"\r\n          @click=\"commitQuestion\"\r\n          >提交</el-button\r\n        >\r\n        <el-button v-if=\"$route.name === 'testAnswer'\" @click=\"reTest\"\r\n          >重新测试</el-button\r\n        >\r\n        <el-button v-if=\"$route.name === 'testAnswer'\" @click=\"finishTest\"\r\n          >完成</el-button\r\n        >\r\n      </div>\r\n    </template>\r\n    <no-enterprise v-if=\"noTest\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getQuestion, commitTest, getTestResult } from '@/api/learningAdmin'\r\nimport NoEnterprise from './components/NoEnterprise'\r\nimport { getDateInfo } from '@/utils/learningMethod'\r\nexport default {\r\n  components: {\r\n    NoEnterprise\r\n  },\r\n  data() {\r\n    return {\r\n      questionList: [],\r\n      minute: 0,\r\n      timer: null,\r\n      options: [],\r\n      mtsUserRecord: {},\r\n      questions: [],\r\n      errorNum: 0,\r\n      answers: [],\r\n      noTest: false,\r\n      reQuestionList: '',\r\n      isReset: false\r\n    }\r\n  },\r\n  computed: {\r\n    getTime() {\r\n      return function(start, end) {\r\n        if (start && end) {\r\n          let time = new Date(end).getTime() - new Date(start).getTime()\r\n          time = time / 1000 / 60\r\n          return Math.ceil(Math.abs(time))\r\n        } else return this.minute\r\n      }\r\n    },\r\n    getResultColor() {\r\n      return function(index, i) {\r\n        if (this.isReset) {\r\n          return ''\r\n        }\r\n        index = parseInt(index)\r\n        i = parseInt(i)\r\n        if (this.$route.name !== 'testAnswer' || !this.questionList[i]) {\r\n          return ''\r\n        }\r\n        for (const item of this.questionList[i].standard_answers) {\r\n          if (parseInt(item) === index) {\r\n            return 'success'\r\n          }\r\n        }\r\n        for (const i of this.questionList[i].answers) {\r\n          if (index === parseInt(i)) return 'error'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    questionList: {\r\n      handler(newName, oldName) {\r\n        console.log(newName, oldName)\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    if (this.$route.name !== 'testAnswer') this.getQuestion()\r\n    if (this.$route.name === 'testAnswer') this.getTestResult()\r\n    this.$store.state.study.start_test_time = new Date()\r\n  },\r\n  mounted() {\r\n    const self = this\r\n    if (this.$route.name === 'test') {\r\n      this.timer = setInterval(function() {\r\n        self.minute++\r\n      }, 60000)\r\n    }\r\n  },\r\n  methods: {\r\n    async commitQuestion() {\r\n      if (this.options.length !== this.questionList.length) {\r\n        return this.$message({ message: '请做完题目后再提交', type: 'error' })\r\n      }\r\n      for (const item of this.options) {\r\n        if (!item || !item.id) {\r\n          return this.$message({\r\n            message: '请做完题目后再提交',\r\n            type: 'error'\r\n          })\r\n        }\r\n      }\r\n      this.isReset = false\r\n      const { data, code } = await commitTest({\r\n        catalog: this.$route.params.id,\r\n        questions: this.options,\r\n        started_at: getDateInfo(\r\n          this.$store.state.study.start_study_time || new Date()\r\n        ),\r\n        exam_start_at: getDateInfo(\r\n          this.$store.state.study.start_test_time || new Date()\r\n        ),\r\n        exam_end_at: new Date()\r\n      })\r\n      if (code === 20000 && data) {\r\n        await this.getTestResult()\r\n        this.$router.push({\r\n          name: 'testAnswer',\r\n          params: { id: this.$route.params.id },\r\n          query: { title: this.$route.query.title }\r\n        })\r\n      }\r\n    },\r\n    async getQuestion() {\r\n      const { data, code } = await getQuestion({\r\n        catalog: this.$route.params.id,\r\n        type: 'choice'\r\n      })\r\n      if (code === 20000 && data.result) {\r\n        this.questionList = data.list\r\n        this.reQuestionList = JSON.stringify(data.list)\r\n        if (this.questionList.length === 0) this.noTest = true\r\n        this.answers = data.list.map(() => {\r\n          return []\r\n        })\r\n      }\r\n    },\r\n    setOptions(i, index, id) {\r\n      this.options[index] = {\r\n        id: id,\r\n        answers: this.answers[index]\r\n          .toString()\r\n          .split(',')\r\n          .map(item => {\r\n            return parseInt(item)\r\n          })\r\n      }\r\n    },\r\n    async getTestResult() {\r\n      const { code, data } = await getTestResult(this.$route.params.id)\r\n      if (code === 20000 && data.result) {\r\n        this.mtsUserRecord = data.mtsUserRecord\r\n        this.questionList = data.questions.map(v => {\r\n          return {\r\n            stem: v.stem,\r\n            options: v.standard_options,\r\n            type: v.type,\r\n            difficult: v.difficult,\r\n            answers: v.answers,\r\n            standard_answers: v.standard_answers\r\n          }\r\n        })\r\n        this.errorNum = data.questions.filter(v => v.status === 'error').length\r\n      }\r\n      for (const i in this.questions) {\r\n        this.options.push({\r\n          error: this.questions[i].answers,\r\n          success: this.questions[i].standard_answers\r\n        })\r\n      }\r\n    },\r\n    finishTest() {\r\n      if (this.mtsUserRecord.lesson_column !== 'catalog')\r\n        this.$router.push(\r\n          '/study/corporate-culture/' + this.mtsUserRecord.lesson_column\r\n        )\r\n      else this.$router.push('/study/stage')\r\n    },\r\n    async reTest() {\r\n      this.isReset = true\r\n      this.mtsUserRecord = {}\r\n      this.options = []\r\n      await this.getQuestion()\r\n      await this.$router.push(\r\n        `/study/test/${this.$route.params.id}?title=${this.$route.query.title}`\r\n      )\r\n    }\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    this.timer = null\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.question-test {\r\n  position: relative;\r\n  height: 100%;\r\n  .title {\r\n    padding-bottom: 30px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color: #333;\r\n  }\r\n  .time {\r\n    position: absolute;\r\n    top: 32px;\r\n    right: 0;\r\n    padding: 20px 0 20px 10px;\r\n    width: 144px;\r\n    height: 96px;\r\n    font-size: 12px;\r\n    &.end-time {\r\n      background-position: center center;\r\n      -webkit-background-size: 100% 100%;\r\n      background-size: 100% 100%;\r\n      background-image: url('../../assets/images/test_answer.png');\r\n    }\r\n    p {\r\n      margin-bottom: 10px;\r\n    }\r\n    .second {\r\n      color: #fff;\r\n      &.start-second {\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #17233d;\r\n      }\r\n    }\r\n    .score {\r\n      color: #0085ff;\r\n    }\r\n    .error {\r\n      color: #f8747f;\r\n    }\r\n  }\r\n  .tip-sign {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #17233d;\r\n    margin-bottom: 20px;\r\n  }\r\n  .question-list {\r\n    .item {\r\n      margin-bottom: 22px;\r\n      img {\r\n        max-width: 400px !important;\r\n      }\r\n      .stem {\r\n        font-size: 14px;\r\n        color: #576277;\r\n        margin-bottom: 14px;\r\n        /deep/p {\r\n          display: inline;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /deep/.el-radio-group {\r\n    margin-left: 10px;\r\n    .success {\r\n      p {\r\n        color: #67c23a;\r\n      }\r\n      span {\r\n        color: #67c23a !important;\r\n      }\r\n      .el-radio__inner {\r\n        /* background-color: #67C23A; */\r\n      }\r\n    }\r\n    .error {\r\n      p {\r\n        color: #f56c6c;\r\n      }\r\n      span {\r\n        color: #f56c6c !important;\r\n      }\r\n      .el-radio__inner {\r\n        /* background-color: #F56C6C; */\r\n      }\r\n    }\r\n    .el-radio:not(:last-child) {\r\n      display: block;\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n  /deep/.el-checkbox-group {\r\n    margin-left: 10px;\r\n    .success {\r\n      p {\r\n        color: #67c23a;\r\n      }\r\n      span {\r\n        color: #67c23a !important;\r\n      }\r\n      .el-checkbox__inner {\r\n        background-color: transparent;\r\n        border: none;\r\n      }\r\n    }\r\n    .error {\r\n      p {\r\n        color: #f56c6c;\r\n      }\r\n      span {\r\n        color: #f56c6c !important;\r\n      }\r\n      .el-checkbox__inner {\r\n        background-color: transparent;\r\n        border: none;\r\n        border-radius: 100%;\r\n      }\r\n    }\r\n    .el-checkbox:not(:last-child) {\r\n      display: block;\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n  .commit-btn {\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  /deep/.el-radio p {\r\n    display: inline;\r\n  }\r\n  /deep/.el-radio__label {\r\n    span {\r\n      color: #606266;\r\n    }\r\n    * {\r\n      display: inline-grid;\r\n    }\r\n  }\r\n  /deep/.el-checkbox__label {\r\n    span {\r\n      color: #606266;\r\n      p {\r\n        display: inline-block;\r\n      }\r\n    }\r\n    * {\r\n      display: inline-grid;\r\n    }\r\n  }\r\n  .test-icon {\r\n    position: absolute;\r\n    left: 0;\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n}\r\n</style>\r\n<template>\r\n  <div class=\"question-test\">\r\n    <template v-if=\"questionList.length\">\r\n      <h4 class=\"title\">{{ $route.query.title }}</h4>\r\n      <div\r\n        class=\"time\"\r\n        :class=\"this.$route.name === 'testAnswer' ? 'end-time' : ''\"\r\n      >\r\n        <p\r\n          class=\"second\"\r\n          :class=\"this.$route.name !== 'testAnswer' ? 'start-second' : ''\"\r\n        >\r\n          考试用时：{{\r\n            getTime(mtsUserRecord.exam_start_at, mtsUserRecord.exam_end_at)\r\n          }}分钟\r\n        </p>\r\n        <p v-if=\"this.$route.name === 'testAnswer'\" class=\"score\">\r\n          分数：{{ mtsUserRecord.score || 0 }}分\r\n        </p>\r\n        <p v-if=\"this.$route.name === 'testAnswer'\" class=\"error\">\r\n          错题数：{{ errorNum }}个\r\n        </p>\r\n      </div>\r\n      <p class=\"tip-sign\">\r\n        不定项选择题 (共{{ questionList.length }}道题，每题{{\r\n          parseInt(100 / questionList.length) || 0\r\n        }}分)\r\n      </p>\r\n      <div class=\"question-list\">\r\n        <div v-for=\"(item, idx) of questionList\" :key=\"idx\" class=\"item\">\r\n          <p class=\"stem\">\r\n            {{ idx + 1 }}.\r\n            <span v-html=\"item.stem\" />\r\n          </p>\r\n          <el-checkbox-group\r\n            v-if=\"item.type === 'checkbox'\"\r\n            v-model=\"answers[idx]\"\r\n            size=\"small\"\r\n            :disabled=\"$route.name === 'testAnswer'\"\r\n          >\r\n            <el-checkbox\r\n              v-for=\"option of item.options\"\r\n              :key=\"option.index\"\r\n              :label=\"option.index\"\r\n              :class=\"getResultColor(option.index, idx)\"\r\n              @change=\"setOptions(option.index, idx, item._id, item)\"\r\n            >\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'error'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-btn-pic-closex-copy\" />\r\n              </svg>\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'success'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-ico-jkda-xzx\" />\r\n              </svg>\r\n              <span>{{ option.index + 1 }}</span\r\n              >.\r\n              <span v-html=\"option.item\" />\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n          <el-radio-group\r\n            v-if=\"item.type === 'radio'\"\r\n            v-model=\"answers[idx]\"\r\n            size=\"small\"\r\n            :disabled=\"$route.name === 'testAnswer'\"\r\n          >\r\n            <el-radio\r\n              v-for=\"(option, index) of item.options\"\r\n              :key=\"index\"\r\n              :label=\"index\"\r\n              :class=\"getResultColor(index, idx)\"\r\n              @change=\"setOptions(index, idx, item._id)\"\r\n            >\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'error'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-btn-pic-closex-copy\" />\r\n              </svg>\r\n              <svg\r\n                v-if=\"getResultColor(option.index, idx) === 'success'\"\r\n                class=\"icon test-icon\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <use xlink:href=\"#icon-ico-jkda-xzx\" />\r\n              </svg>\r\n              <span>{{ index + 1 }}</span\r\n              >.\r\n              <span v-html=\"option.item\" />\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </div>\r\n      </div>\r\n      <div class=\"commit-btn\">\r\n        <el-button\r\n          v-if=\"$route.name === 'test'\"\r\n          type=\"primary\"\r\n          @click=\"commitQuestion\"\r\n          >提交</el-button\r\n        >\r\n        <el-button v-if=\"$route.name === 'testAnswer'\" @click=\"reTest\"\r\n          >重新测试</el-button\r\n        >\r\n        <el-button v-if=\"$route.name === 'testAnswer'\" @click=\"finishTest\"\r\n          >完成</el-button\r\n        >\r\n      </div>\r\n    </template>\r\n    <no-enterprise v-if=\"noTest\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getQuestion, commitTest, getTestResult } from '@/api/learningAdmin'\r\nimport NoEnterprise from './components/NoEnterprise'\r\nimport { getDateInfo } from '@/utils/learningMethod'\r\nexport default {\r\n  components: {\r\n    NoEnterprise\r\n  },\r\n  data() {\r\n    return {\r\n      questionList: [],\r\n      minute: 0,\r\n      timer: null,\r\n      options: [],\r\n      mtsUserRecord: {},\r\n      questions: [],\r\n      errorNum: 0,\r\n      answers: [],\r\n      noTest: false,\r\n      reQuestionList: '',\r\n      isReset: false\r\n    }\r\n  },\r\n  computed: {\r\n    getTime() {\r\n      return function(start, end) {\r\n        if (start && end) {\r\n          let time = new Date(end).getTime() - new Date(start).getTime()\r\n          time = time / 1000 / 60\r\n          return Math.ceil(Math.abs(time))\r\n        } else return this.minute\r\n      }\r\n    },\r\n    getResultColor() {\r\n      return function(index, i) {\r\n        if (this.isReset) {\r\n          return ''\r\n        }\r\n        index = parseInt(index)\r\n        i = parseInt(i)\r\n        if (this.$route.name !== 'testAnswer' || !this.questionList[i]) {\r\n          return ''\r\n        }\r\n        for (const item of this.questionList[i].standard_answers) {\r\n          if (parseInt(item) === index) {\r\n            return 'success'\r\n          }\r\n        }\r\n        for (const i of this.questionList[i].answers) {\r\n          if (index === parseInt(i)) return 'error'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    questionList: {\r\n      handler(newName, oldName) {\r\n        console.log(newName, oldName)\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    if (this.$route.name !== 'testAnswer') this.getQuestion()\r\n    if (this.$route.name === 'testAnswer') this.getTestResult()\r\n    this.$store.state.study.start_test_time = new Date()\r\n  },\r\n  mounted() {\r\n    const self = this\r\n    if (this.$route.name === 'test') {\r\n      this.timer = setInterval(function() {\r\n        self.minute++\r\n      }, 60000)\r\n    }\r\n  },\r\n  methods: {\r\n    async commitQuestion() {\r\n      if (this.options.length !== this.questionList.length) {\r\n        return this.$message({ message: '请做完题目后再提交', type: 'error' })\r\n      }\r\n      for (const item of this.options) {\r\n        if (!item || !item.id) {\r\n          return this.$message({\r\n            message: '请做完题目后再提交',\r\n            type: 'error'\r\n          })\r\n        }\r\n      }\r\n      this.isReset = false\r\n      const { data, code } = await commitTest({\r\n        catalog: this.$route.params.id,\r\n        questions: this.options,\r\n        started_at: getDateInfo(\r\n          this.$store.state.study.start_study_time || new Date()\r\n        ),\r\n        exam_start_at: getDateInfo(\r\n          this.$store.state.study.start_test_time || new Date()\r\n        ),\r\n        exam_end_at: new Date()\r\n      })\r\n      if (code === 20000 && data) {\r\n        await this.getTestResult()\r\n        this.$router.push({\r\n          name: 'testAnswer',\r\n          params: { id: this.$route.params.id },\r\n          query: { title: this.$route.query.title }\r\n        })\r\n      }\r\n    },\r\n    async getQuestion() {\r\n      const { data, code } = await getQuestion({\r\n        catalog: this.$route.params.id,\r\n        type: 'choice'\r\n      })\r\n      if (code === 20000 && data.result) {\r\n        this.questionList = data.list\r\n        this.reQuestionList = JSON.stringify(data.list)\r\n        if (this.questionList.length === 0) this.noTest = true\r\n        this.answers = data.list.map(() => {\r\n          return []\r\n        })\r\n      }\r\n    },\r\n    setOptions(i, index, id) {\r\n      this.options[index] = {\r\n        id: id,\r\n        answers: this.answers[index]\r\n          .toString()\r\n          .split(',')\r\n          .map(item => {\r\n            return parseInt(item)\r\n          })\r\n      }\r\n    },\r\n    async getTestResult() {\r\n      const { code, data } = await getTestResult(this.$route.params.id)\r\n      if (code === 20000 && data.result) {\r\n        this.mtsUserRecord = data.mtsUserRecord\r\n        this.questionList = data.questions.map(v => {\r\n          return {\r\n            stem: v.stem,\r\n            options: v.standard_options,\r\n            type: v.type,\r\n            difficult: v.difficult,\r\n            answers: v.answers,\r\n            standard_answers: v.standard_answers\r\n          }\r\n        })\r\n        this.errorNum = data.questions.filter(v => v.status === 'error').length\r\n      }\r\n      for (const i in this.questions) {\r\n        this.options.push({\r\n          error: this.questions[i].answers,\r\n          success: this.questions[i].standard_answers\r\n        })\r\n      }\r\n    },\r\n    finishTest() {\r\n      if (this.mtsUserRecord.lesson_column !== 'catalog')\r\n        this.$router.push(\r\n          '/study/corporate-culture/' + this.mtsUserRecord.lesson_column\r\n        )\r\n      else this.$router.push('/study/stage')\r\n    },\r\n    async reTest() {\r\n      this.isReset = true\r\n      this.mtsUserRecord = {}\r\n      this.options = []\r\n      await this.getQuestion()\r\n      await this.$router.push(\r\n        `/study/test/${this.$route.params.id}?title=${this.$route.query.title}`\r\n      )\r\n    }\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    this.timer = null\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.question-test {\r\n  position: relative;\r\n  height: 100%;\r\n  .title {\r\n    padding-bottom: 30px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color: #333;\r\n  }\r\n  .time {\r\n    position: absolute;\r\n    top: 32px;\r\n    right: 0;\r\n    padding: 20px 0 20px 10px;\r\n    width: 144px;\r\n    height: 96px;\r\n    font-size: 12px;\r\n    &.end-time {\r\n      background-position: center center;\r\n      -webkit-background-size: 100% 100%;\r\n      background-size: 100% 100%;\r\n      background-image: url('../../assets/images/test_answer.png');\r\n    }\r\n    p {\r\n      margin-bottom: 10px;\r\n    }\r\n    .second {\r\n      color: #fff;\r\n      &.start-second {\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #17233d;\r\n      }\r\n    }\r\n    .score {\r\n      color: #0085ff;\r\n    }\r\n    .error {\r\n      color: #f8747f;\r\n    }\r\n  }\r\n  .tip-sign {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #17233d;\r\n    margin-bottom: 20px;\r\n  }\r\n  .question-list {\r\n    .item {\r\n      margin-bottom: 22px;\r\n      img {\r\n        max-width: 400px !important;\r\n      }\r\n      .stem {\r\n        font-size: 14px;\r\n        color: #576277;\r\n        margin-bottom: 14px;\r\n        /deep/p {\r\n          display: inline;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /deep/.el-radio-group {\r\n    margin-left: 10px;\r\n    .success {\r\n      p {\r\n        color: #67c23a;\r\n      }\r\n      span {\r\n        color: #67c23a !important;\r\n      }\r\n      .el-radio__inner {\r\n        /* background-color: #67C23A; */\r\n      }\r\n    }\r\n    .error {\r\n      p {\r\n        color: #f56c6c;\r\n      }\r\n      span {\r\n        color: #f56c6c !important;\r\n      }\r\n      .el-radio__inner {\r\n        /* background-color: #F56C6C; */\r\n      }\r\n    }\r\n    .el-radio:not(:last-child) {\r\n      display: block;\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n  /deep/.el-checkbox-group {\r\n    margin-left: 10px;\r\n    .success {\r\n      p {\r\n        color: #67c23a;\r\n      }\r\n      span {\r\n        color: #67c23a !important;\r\n      }\r\n      .el-checkbox__inner {\r\n        background-color: transparent;\r\n        border: none;\r\n      }\r\n    }\r\n    .error {\r\n      p {\r\n        color: #f56c6c;\r\n      }\r\n      span {\r\n        color: #f56c6c !important;\r\n      }\r\n      .el-checkbox__inner {\r\n        background-color: transparent;\r\n        border: none;\r\n        border-radius: 100%;\r\n      }\r\n    }\r\n    .el-checkbox:not(:last-child) {\r\n      display: block;\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n  .commit-btn {\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  /deep/.el-radio p {\r\n    display: inline;\r\n  }\r\n  /deep/.el-radio__label {\r\n    span {\r\n      color: #606266;\r\n    }\r\n    * {\r\n      display: inline-grid;\r\n    }\r\n  }\r\n  /deep/.el-checkbox__label {\r\n    span {\r\n      color: #606266;\r\n      p {\r\n        display: inline-block;\r\n      }\r\n    }\r\n    * {\r\n      display: inline-grid;\r\n    }\r\n  }\r\n  .test-icon {\r\n    position: absolute;\r\n    left: 0;\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=2a9c7a18&scoped=true&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Test.vue?vue&type=style&index=0&id=2a9c7a18&scoped=true&lang=scss&\"\nimport style1 from \"./Test.vue?vue&type=style&index=1&id=2a9c7a18&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2a9c7a18\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=style&index=0&id=2a9c7a18&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=style&index=0&id=2a9c7a18&scoped=true&lang=scss&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoEnterprise.vue?vue&type=style&index=0&id=5c4f06eb&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoEnterprise.vue?vue&type=style&index=0&id=5c4f06eb&lang=scss&scoped=true&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=style&index=1&id=2a9c7a18&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=style&index=1&id=2a9c7a18&scoped=true&lang=scss&\"","export const getDateInfo = function(date) {\r\n  const y = date.getFullYear()\r\n  let m = date.getMonth() + 1\r\n  const d = date.getDate()\r\n  const h = date.getHours()\r\n  const min = date.getMinutes()\r\n  const s = date.getSeconds()\r\n  if (m < 10) m = '0' + m\r\n  return `${y}-${m}-${d} ${h}:${min}:${s}`\r\n}\r\nexport const getTime = ({ start, end, time }) => {\r\n  if (!start && !end && !time) return '0天0小时0分钟'\r\n  if (!time) {\r\n    time = new Date(end) - new Date(start)\r\n  }\r\n  const days = Math.floor(time / (24 * 3600 * 1000))\r\n  // 计算出小时数\r\n  const leave1 = time % (24 * 3600 * 1000) // 计算天数后剩余的毫秒数\r\n  const hours = Math.floor(leave1 / (3600 * 1000))\r\n  // 计算相差分钟数\r\n  const leave2 = leave1 % (3600 * 1000) // 计算小时数后剩余的毫秒数\r\n  const minutes = Math.ceil(leave2 / (60 * 1000))\r\n  // 计算相差秒数\r\n  // const leave3 = leave2 % (60 * 1000) // 计算分钟数后剩余的毫秒数\r\n  // const seconds = Math.round(leave3 / 1000)\r\n  return days + '天' + hours + '小时' + minutes + '分钟'\r\n}\r\nexport const getNowFormatDate = time => {\r\n  const date = new Date(time)\r\n  const seperator1 = '-'\r\n  const seperator2 = ':'\r\n  let month = date.getMonth() + 1\r\n  let strDate = date.getDate()\r\n  if (month >= 1 && month <= 9) {\r\n    month = '0' + month\r\n  }\r\n  if (strDate >= 0 && strDate <= 9) {\r\n    strDate = '0' + strDate\r\n  }\r\n  const currentdate =\r\n    date.getFullYear() +\r\n    seperator1 +\r\n    month +\r\n    seperator1 +\r\n    strDate +\r\n    ' ' +\r\n    date.getHours() +\r\n    seperator2 +\r\n    date.getMinutes() +\r\n    seperator2 +\r\n    date.getSeconds()\r\n  if (currentdate.indexOf('NaN') !== -1) return '/'\r\n  return currentdate\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"no-enterprise\"},[_c('div',{staticClass:\"tip-img center\"},[_c('img',{attrs:{\"src\":\"https://pic1.baobaohehu.com/fd/admin_v3/5d7f5f5c1c03121b82179aee//20200217173713291/1581932233007.png\"}})])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"no-enterprise\">\r\n    <div class=\"tip-img center\">\r\n      <img\r\n        src=\"https://pic1.baobaohehu.com/fd/admin_v3/5d7f5f5c1c03121b82179aee//20200217173713291/1581932233007.png\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.no-enterprise {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  .tip-img {\r\n    img {\r\n      height: 200px;\r\n    }\r\n    p {\r\n      margin-top: 20px;\r\n      font-size: 16px;\r\n      color: #576277;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoEnterprise.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoEnterprise.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NoEnterprise.vue?vue&type=template&id=5c4f06eb&scoped=true&\"\nimport script from \"./NoEnterprise.vue?vue&type=script&lang=js&\"\nexport * from \"./NoEnterprise.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NoEnterprise.vue?vue&type=style&index=0&id=5c4f06eb&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c4f06eb\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}