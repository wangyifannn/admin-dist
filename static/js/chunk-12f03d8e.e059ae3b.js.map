{"version":3,"sources":["webpack:///./src/views/system-settings/customer-type/index.vue?9361","webpack:///src/views/system-settings/customer-type/index.vue","webpack:///./src/views/system-settings/customer-type/index.vue?f4c3","webpack:///./src/views/system-settings/customer-type/index.vue","webpack:///./src/utils/crmRequest.js","webpack:///./src/api/assistantManage.js","webpack:///./src/views/system-settings/customer-type/index.vue?4f8a"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","userTypeSearch","model","value","callback","$$v","$set","trim","expression","staticStyle","on","onSubmit","_v","resetForm","$event","setUserType","list","hasListInfo","scopedSlots","_u","key","fn","scope","row","delShow","rowInfo","currentPage","pageSize","count","handleSizeChange","handleCurrentChange","slot","delConfirm","userTypeTitle","userTypeShow","setUserTypeForm","required","message","target","_l","item","label","inputFormSubmit","_s","btnText","staticRenderFns","data","isOpen","name","keyWord","typeA","typeB","description","typeAList","watch","newValue","created","getUserTypeList","methods","val","num","$refs","formName","validate","valid","component","service","axios","create","baseURL","process","timeout","interceptors","request","use","config","store","getters","token","headers","getToken","error","console","log","Promise","reject","response","res","url","indexOf","code","router","push","Message","type","duration","dispatch","then","location","reload","Error","getHelperList","params","method","getAdminList","getHelper","createHelper","matchingHelper","id","updateHelper","deleteHelper","getChannelList","createChannel","updateChannel","deleteChannel","createUserType","updateUserType","deleteUserType","getFollowList","createFollow","updateFollow","deleteFollow","setStatus","getCurrentList","getUserInfo","getFollowLog","getUserType","getOrderList","addSource","putSource","getSourceDetail","deleteSource","getSourceList","getQrcode","getCodeList","createProgramCode","deleteProgramCode","downloadCode"],"mappings":"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","file":"static/js/chunk-12f03d8e.e059ae3b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"customer-type\"},[_c('el-form',{ref:\"userTypeSearch\",attrs:{\"label-position\":\"left\",\"label-width\":\"80px\",\"model\":_vm.userTypeSearch,\"inline\":\"\"}},[_c('el-form-item',{staticClass:\"search-item\",attrs:{\"label\":\"关键词\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"请输入关键词\"},model:{value:(_vm.userTypeSearch.keyWord),callback:function ($$v) {_vm.$set(_vm.userTypeSearch, \"keyWord\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"userTypeSearch.keyWord\"}})],1),_c('el-form-item',{staticClass:\"search-item\",attrs:{\"label\":\"创建人\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"请输入创建人\"},model:{value:(_vm.userTypeSearch.name),callback:function ($$v) {_vm.$set(_vm.userTypeSearch, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"userTypeSearch.name\"}})],1),_c('el-form-item',{staticStyle:{\"float\":\"right\"}},[_c('el-button',{staticClass:\"select-btn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"查询\")]),_c('el-button',{staticClass:\"select-btn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.resetForm}},[_vm._v(\"重置\")])],1)],1),_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"title\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.setUserType(1)}}},[_vm._v(\"新增用户类型\")])],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.list,\"border\":\"\",\"empty-text\":_vm.hasListInfo}},[_c('el-table-column',{attrs:{\"fixed\":\"\",\"prop\":\"num\",\"label\":\"序号\",\"width\":\"100\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":\"用户类型\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"类型描述\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"founder\",\"label\":\"创建人\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"created_at\",\"label\":\"创建时间\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"200\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.setUserType(2, scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){_vm.delShow = true\n              _vm.rowInfo = scope.row}}},[_vm._v(\"删除\")])]}}])})],1),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-sizes\":[10, 20, 50],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.count},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_c('el-dialog',{attrs:{\"title\":\"删除提示\",\"visible\":_vm.delShow,\"width\":\"400px\",\"center\":\"\",\"top\":\"30vh\"},on:{\"update:visible\":function($event){_vm.delShow=$event}}},[_c('p',{staticClass:\"center\"},[_vm._v(\"\\n      删除后，该渠道信息将不存在，\\n      \"),_c('br'),_vm._v(\"请确定是否删除？\\n    \")]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.delConfirm}},[_vm._v(\"确 定\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.delShow = false}}},[_vm._v(\"取 消\")])],1)]),_c('el-dialog',{attrs:{\"title\":_vm.userTypeTitle,\"visible\":_vm.userTypeShow,\"width\":\"400px\",\"center\":\"\",\"top\":\"30vh\"},on:{\"update:visible\":function($event){_vm.userTypeShow=$event}}},[_c('el-form',{ref:\"channelForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.setUserTypeForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"一级类型\",\"prop\":\"typeA\",\"rules\":_vm.userTypeShow\n            ? [{ required: true, message: '请选择', target: 'blur' }]\n            : {}}},[_c('el-select',{attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"clearable\":\"\",\"placeholder\":\"请输入一级类型\"},model:{value:(_vm.setUserTypeForm.typeA),callback:function ($$v) {_vm.$set(_vm.setUserTypeForm, \"typeA\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"setUserTypeForm.typeA\"}},_vm._l((_vm.typeAList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"二级类型\",\"prop\":\"typeB\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"请输入二级类型\"},model:{value:(_vm.setUserTypeForm.typeB),callback:function ($$v) {_vm.$set(_vm.setUserTypeForm, \"typeB\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"setUserTypeForm.typeB\"}})],1),_c('el-form-item',{attrs:{\"label\":\"类型描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"texarea\",\"clearable\":\"\",\"placeholder\":\"请输入类型描述\"},model:{value:(_vm.setUserTypeForm.description),callback:function ($$v) {_vm.$set(_vm.setUserTypeForm, \"description\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"setUserTypeForm.description\"}})],1),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.inputFormSubmit('channelForm')}}},[_vm._v(_vm._s(_vm.btnText))])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"customer-type\">\r\n    <!--  搜索  -->\r\n    <el-form\r\n      ref=\"userTypeSearch\"\r\n      label-position=\"left\"\r\n      label-width=\"80px\"\r\n      :model=\"userTypeSearch\"\r\n      inline\r\n    >\r\n      <el-form-item label=\"关键词\" class=\"search-item\">\r\n        <el-input\r\n          v-model.trim=\"userTypeSearch.keyWord\"\r\n          clearable\r\n          placeholder=\"请输入关键词\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"创建人\" class=\"search-item\">\r\n        <el-input\r\n          v-model.trim=\"userTypeSearch.name\"\r\n          clearable\r\n          placeholder=\"请输入创建人\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item style=\"float: right\">\r\n        <el-button type=\"primary\" class=\"select-btn\" @click=\"onSubmit\"\r\n          >查询</el-button\r\n        >\r\n        <el-button type=\"primary\" class=\"select-btn\" @click=\"resetForm\"\r\n          >重置</el-button\r\n        >\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--  列表  -->\r\n    <div class=\"list\">\r\n      <div class=\"title\">\r\n        <el-button type=\"primary\" @click=\"setUserType(1)\"\r\n          >新增用户类型</el-button\r\n        >\r\n      </div>\r\n      <el-table\r\n        :data=\"list\"\r\n        style=\"width: 100%\"\r\n        border\r\n        :empty-text=\"hasListInfo\"\r\n      >\r\n        <el-table-column\r\n          fixed\r\n          prop=\"num\"\r\n          label=\"序号\"\r\n          width=\"100\"\r\n          align=\"center\"\r\n        />\r\n        <el-table-column prop=\"type\" label=\"用户类型\" align=\"center\" />\r\n        <el-table-column prop=\"description\" label=\"类型描述\" align=\"center\" />\r\n        <el-table-column prop=\"founder\" label=\"创建人\" align=\"center\" />\r\n        <el-table-column prop=\"created_at\" label=\"创建时间\" align=\"center\" />\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"200\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              @click=\"setUserType(2, scope.row)\"\r\n              >编辑</el-button\r\n            >\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              @click=\"\r\n                delShow = true\r\n                rowInfo = scope.row\r\n              \"\r\n              >删除</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[10, 20, 50]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"count\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <el-dialog\r\n      title=\"删除提示\"\r\n      :visible.sync=\"delShow\"\r\n      width=\"400px\"\r\n      center\r\n      top=\"30vh\"\r\n    >\r\n      <p class=\"center\">\r\n        删除后，该渠道信息将不存在，\r\n        <br />请确定是否删除？\r\n      </p>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"delConfirm\">确 定</el-button>\r\n        <el-button type=\"primary\" @click=\"delShow = false\">取 消</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog\r\n      :title=\"userTypeTitle\"\r\n      :visible.sync=\"userTypeShow\"\r\n      width=\"400px\"\r\n      center\r\n      top=\"30vh\"\r\n    >\r\n      <el-form\r\n        :model=\"setUserTypeForm\"\r\n        ref=\"channelForm\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item\r\n          label=\"一级类型\"\r\n          prop=\"typeA\"\r\n          :rules=\"\r\n            userTypeShow\r\n              ? [{ required: true, message: '请选择', target: 'blur' }]\r\n              : {}\r\n          \"\r\n        >\r\n          <el-select\r\n            v-model.trim=\"setUserTypeForm.typeA\"\r\n            filterable\r\n            allow-create\r\n            clearable\r\n            placeholder=\"请输入一级类型\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in typeAList\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"二级类型\" prop=\"typeB\">\r\n          <el-input\r\n            v-model.trim=\"setUserTypeForm.typeB\"\r\n            clearable\r\n            placeholder=\"请输入二级类型\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"类型描述\" prop=\"description\">\r\n          <el-input\r\n            type=\"texarea\"\r\n            v-model.trim=\"setUserTypeForm.description\"\r\n            clearable\r\n            placeholder=\"请输入类型描述\"\r\n          />\r\n        </el-form-item>\r\n        <div style=\"text-align: center\">\r\n          <el-button type=\"primary\" @click=\"inputFormSubmit('channelForm')\">{{\r\n            btnText\r\n          }}</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getUserTypeList,\r\n  createUserType,\r\n  updateUserType,\r\n  deleteUserType\r\n} from '@/api/assistantManage'\r\nexport default {\r\n  data() {\r\n    return {\r\n      isOpen: false,\r\n      list: [],\r\n      currentPage: 1,\r\n      delShow: false,\r\n      userTypeShow: false,\r\n      userTypeTitle: '',\r\n      btnText: '',\r\n      pageSize: 10,\r\n      count: 0,\r\n      rowInfo: '',\r\n      hasListInfo: '暂无数据',\r\n      userTypeSearch: {\r\n        name: '',\r\n        keyWord: ''\r\n      },\r\n      setUserTypeForm: {\r\n        typeA: '',\r\n        typeB: '',\r\n        description: ''\r\n      },\r\n      typeAList: [\r\n        { value: '意向用户', label: '意向用户' },\r\n        { value: '潜在用户', label: '潜在用户' },\r\n        { value: '垃圾用户', label: '垃圾用户' }\r\n      ]\r\n    }\r\n  },\r\n  watch: {\r\n    userTypeShow(newValue) {\r\n      if (!newValue) {\r\n        this.setUserTypeForm = {\r\n          typeA: '',\r\n          typeB: '',\r\n          description: ''\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getUserTypeList()\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      this.currentPage = 1\r\n      this.getUserTypeList(this.userTypeSearch)\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.getUserTypeList(this.userTypeSearch)\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.getUserTypeList(this.userTypeSearch)\r\n    },\r\n    resetForm() {\r\n      this.userTypeSearch = {\r\n        name: '',\r\n        keyWord: ''\r\n      }\r\n      this.getUserTypeList()\r\n    },\r\n    async delConfirm() {\r\n      const { code, message } = await deleteUserType(this.rowInfo.id)\r\n      if (code === 10000) {\r\n        this.$message.success(message)\r\n        this.getUserTypeList(this.userTypeSearch)\r\n        this.delShow = false\r\n      }\r\n    },\r\n    setUserType(num, row) {\r\n      if (num === 1) {\r\n        this.userTypeTitle = '新增用户类型'\r\n        this.btnText = '确认新增'\r\n      } else if (num === 2) {\r\n        this.userTypeTitle = '编辑用户类型'\r\n        this.btnText = '确认编辑'\r\n        this.setUserTypeForm = {\r\n          typeA: row.typeA,\r\n          typeB: row.typeB,\r\n          description: row.description === '/' ? '' : row.description\r\n        }\r\n      }\r\n      this.rowInfo = row || {}\r\n      this.rowInfo.num = num\r\n      this.userTypeShow = true\r\n    },\r\n    inputFormSubmit(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          if (this.rowInfo.num === 1) this.createUserType()\r\n          if (this.rowInfo.num === 2) this.updateUserType()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    async getUserTypeList(search) {\r\n      let params = {\r\n        pageSize: this.pageSize,\r\n        page: this.currentPage\r\n      }\r\n      if (search) {\r\n        if (search.name) params.creator_name = search.name\r\n        if (search.keyWord) params.key_word = search.keyWord\r\n        this.hasListInfo = '暂无数据，请重新输入关键词'\r\n      } else {\r\n        this.hasListInfo = '暂无数据'\r\n      }\r\n      const { data, code } = await getUserTypeList(params)\r\n      if (code === 10000) {\r\n        this.count = data.count\r\n        this.list = data.list.map((item, index) => {\r\n          return {\r\n            num: (this.currentPage - 1) * this.pageSize + index + 1,\r\n            id: item._id,\r\n            type: item.type + (item.level ? '-' + item.level : ''),\r\n            typeA: item.type,\r\n            typeB: item.level,\r\n            description: item.describe || '/',\r\n            founder: item.creator_name,\r\n            created_at: item.created_at ? this.formatTime(item.created_at) : '-'\r\n          }\r\n        })\r\n      }\r\n    },\r\n    async createUserType() {\r\n      const data = {\r\n        type: this.setUserTypeForm.typeA,\r\n        level: this.setUserTypeForm.typeB || undefined,\r\n        describe: this.setUserTypeForm.description || undefined\r\n      }\r\n      const { code, message } = await createUserType(data)\r\n      if (code === 10000) {\r\n        this.$message.success(message)\r\n        this.getUserTypeList(this.userTypeSearch)\r\n        this.userTypeShow = false\r\n      }\r\n    },\r\n    async updateUserType() {\r\n      const data = {\r\n        type: this.setUserTypeForm.typeA,\r\n        level: this.setUserTypeForm.typeB || undefined,\r\n        describe: this.setUserTypeForm.description || undefined\r\n      }\r\n      const { code, message } = await updateUserType(this.rowInfo.id, data)\r\n      if (code === 10000) {\r\n        this.$message.success(message)\r\n        this.getUserTypeList(this.userTypeSearch)\r\n        this.userTypeShow = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.customer-type {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n  /deep/form {\r\n    width: 100%;\r\n    .el-date-editor {\r\n      padding: 0 10px;\r\n      width: 220px;\r\n      height: 32px;\r\n      .el-range-input {\r\n        width: 85px;\r\n        height: 30px;\r\n      }\r\n    }\r\n  }\r\n  .search-item {\r\n    color: #17233d;\r\n    &:not(:nth-child(4)) {\r\n      margin-right: 50px;\r\n    }\r\n    /deep/input {\r\n      width: 220px;\r\n      height: 32px;\r\n      line-height: 32px;\r\n    }\r\n    /deep/span {\r\n      top: -3px;\r\n    }\r\n    /deep/.el-input__suffix {\r\n      top: 0;\r\n    }\r\n  }\r\n  .select-btn {\r\n    padding: 0 20px;\r\n    width: 68px;\r\n    height: 32px;\r\n  }\r\n  .arrow {\r\n    float: right;\r\n  }\r\n  .list {\r\n    margin: 20px 0 0;\r\n    width: 100%;\r\n    .title {\r\n      line-height: 32px;\r\n      text-align: right;\r\n      /deep/button {\r\n        margin-bottom: 10px;\r\n        padding: 6px 20px;\r\n        height: 32px;\r\n      }\r\n    }\r\n    /deep/.el-dialog__wrapper {\r\n      button {\r\n        padding: 6px 20px;\r\n        height: 32px;\r\n      }\r\n      .el-dialog__headerbtn {\r\n        top: 10px;\r\n        right: 5px;\r\n      }\r\n    }\r\n    .pagination {\r\n      margin-top: 50px;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .center {\r\n    line-height: 20px;\r\n    text-align: center;\r\n  }\r\n  .button-wrap {\r\n    button {\r\n      height: 32px;\r\n      line-height: 0;\r\n    }\r\n  }\r\n  .danger-tip {\r\n    margin-top: 10px;\r\n    line-height: 16px;\r\n    color: #f00;\r\n  }\r\n  .el-dialog__wrapper {\r\n    /deep/.el-input__inner {\r\n      width: 220px;\r\n    }\r\n  }\r\n  .demo-ruleForm {\r\n    /deep/.el-input {\r\n      width: 220px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=19327c06&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=19327c06&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"19327c06\",\n  null\n  \n)\n\nexport default component.exports","import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport router from '@/router'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// const baseUrl = process.env.NODE_ENV === process.env.VUE_APP_BASE_CRM_API\r\n\r\n// create an axios instance\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_CRM_API, // url = base url + request url\r\n  // withCredentials: true, // send cookies when cross-domain requests\r\n  timeout: 200000 // request timeout\r\n})\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // do something before request is sent\r\n    // 使用mock地址或者真实地址\r\n    if (process.env.NODE_ENV === 'development' && config.mock) {\r\n      config.url = process.env.VUE_APP_MOCK_API + config.url\r\n    }\r\n\r\n    if (store.getters.token) {\r\n      // let each request carry token\r\n      // ['Authorization'] is a custom headers key\r\n      // please modify it according to the actual situation\r\n      config.headers['Authorization'] = getToken()\r\n    }\r\n\r\n    return config\r\n  },\r\n  error => {\r\n    // do something with request error\r\n    console.log(error) // for debug\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n   */\r\n\r\n  /**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   */\r\n  response => {\r\n    const config = response.config\r\n    const res = response.data\r\n    // if the custom code is not 20000, it is judged as an error.\r\n    if (config.url.indexOf(config.baseURL) > -1 && res.code !== 10000) {\r\n      // 没有 api 权限\r\n      if (res.code === 40001) {\r\n        router.push('/404')\r\n        return Promise.reject()\r\n      }\r\n\r\n      Message({\r\n        message: res.message || 'Error',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n\r\n      // 403 超时的访问 401 未授权的访问\r\n      if (res.code === 401) {\r\n        store.dispatch('user/resetToken').then(() => {\r\n          location.reload()\r\n        })\r\n      }\r\n\r\n      return Promise.reject(new Error(res.message || 'Error'))\r\n    } else {\r\n      /* if (res.data && res.data.result === false) {\r\n        Message({\r\n          message: res.data.message || 'Error',\r\n          type: 'error',\r\n          duration: 5 * 1000\r\n        })\r\n      }*/\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.log('err' + error) // for debug\r\n    Message({\r\n      message: error.message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import request from '@/utils/crmRequest'\r\n\r\n/********* 小助手管理 ************/\r\n\r\n// 获取小助手列表\r\nexport function getHelperList(params) {\r\n  return request({\r\n    url: '/corp/wechat/helper',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取员工列表\r\nexport function getAdminList(params) {\r\n  return request({\r\n    url: '/corp/admin',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取列表\r\nexport function getHelper(params) {\r\n  return request({\r\n    url: '/corp/helper',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 创建小助手\r\nexport function createHelper(data) {\r\n  return request({\r\n    url: '/corp/helper',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 匹配运营人员\r\nexport function matchingHelper(id, data) {\r\n  return request({\r\n    url: '/corp/helper/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 更改运营人员\r\nexport function updateHelper(id, data) {\r\n  return request({\r\n    url: '/corp/helper/change/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除小助手\r\nexport function deleteHelper(id) {\r\n  return request({\r\n    url: '/corp/helper/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n/********* 小助手管理 ************/\r\n\r\n/********* 来源渠道管理 ************/\r\n\r\n// 获取渠道列表\r\nexport function getChannelList(params) {\r\n  return request({\r\n    url: '/corp/source_channel',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 新增渠道\r\nexport function createChannel(data) {\r\n  return request({\r\n    url: '/corp/source_channel',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新渠道\r\nexport function updateChannel(id, data) {\r\n  return request({\r\n    url: '/corp/source_channel/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除渠道\r\nexport function deleteChannel(id) {\r\n  return request({\r\n    url: '/corp/source_channel/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n/********* 来源渠道管理 ************/\r\n\r\n/********* 用户类型管理 ************/\r\n\r\n// 获取用户类型列表\r\nexport function getUserTypeList(params) {\r\n  return request({\r\n    url: '/corp/user_type',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 新增渠道\r\nexport function createUserType(data) {\r\n  return request({\r\n    url: '/corp/user_type',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新渠道\r\nexport function updateUserType(id, data) {\r\n  return request({\r\n    url: '/corp/user_type/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除渠道\r\nexport function deleteUserType(id) {\r\n  return request({\r\n    url: '/corp/user_type/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n/********* 用户类型管理 ************/\r\n\r\n/********* 跟进操作管理 ************/\r\n\r\n// 获取用户类型列表\r\nexport function getFollowList(params) {\r\n  return request({\r\n    url: '/corp/user_visit',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 新增渠道\r\nexport function createFollow(data) {\r\n  return request({\r\n    url: '/corp/user_visit',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新渠道\r\nexport function updateFollow(id, data) {\r\n  return request({\r\n    url: '/corp/user_visit/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除渠道\r\nexport function deleteFollow(id) {\r\n  return request({\r\n    url: '/corp/user_visit/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 改变状态\r\nexport function setStatus(id) {\r\n  return request({\r\n    url: '/corp/user_visit/status/' + id,\r\n    method: 'put'\r\n  })\r\n}\r\n\r\n/********* 跟进操作管理 ************/\r\n\r\n/********* 用户管理 ************/\r\n\r\n// 获取用户列表\r\nexport const getCurrentList = params => {\r\n  return request({\r\n    url: 'corp/user',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取用户信息\r\nexport const getUserInfo = id => {\r\n  return request({\r\n    url: 'corp/admin/crm_user/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取跟进列表\r\nexport const getFollowLog = params => {\r\n  return request({\r\n    url: 'corp/follow_up_log',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取用户来源\r\nexport const getUserType = params => {\r\n  return request({\r\n    url: 'corp/source_channel',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取订单列表\r\nexport const getOrderList = id => {\r\n  return request({\r\n    url: 'corp/admin/order/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/********* 用户管理 ************/\r\n\r\n/********* 渠道场景管理 ************/\r\n\r\n// 创建\r\nexport const addSource = data => {\r\n  return request({\r\n    url: 'corp/admin/scene',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新\r\nexport const putSource = (id, data) => {\r\n  return request({\r\n    url: 'corp/admin/scene/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取详情\r\nexport const getSourceDetail = id => {\r\n  return request({\r\n    url: 'corp/admin/scene/detail/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 删除\r\nexport const deleteSource = id => {\r\n  return request({\r\n    url: 'corp/admin/scene/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 获取列表\r\nexport const getSourceList = params => {\r\n  return request({\r\n    url: 'corp/admin/scene',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取二维码qrcode\r\nexport const getQrcode = id => {\r\n  return request({\r\n    url: 'corp/admin/scene/qrcode/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/********* 渠道场景管理 ************/\r\n\r\n/********* 小程序码管理 ************/\r\n\r\n// 获取列表\r\nexport const getCodeList = params => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 创建小程序码\r\nexport const createProgramCode = data => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除小程序码\r\nexport const deleteProgramCode = id => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 下载小程序码\r\nexport const downloadCode = params => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode/download',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n/********* 小程序码管理 ************/\r\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=19327c06&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=19327c06&lang=scss&scoped=true&\""],"sourceRoot":""}