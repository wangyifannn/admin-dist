{"version":3,"sources":["webpack:///./src/views/system-settings/source-channel/index.vue?286d","webpack:///src/views/system-settings/source-channel/index.vue","webpack:///./src/views/system-settings/source-channel/index.vue?1514","webpack:///./src/views/system-settings/source-channel/index.vue","webpack:///./src/views/system-settings/source-channel/index.vue?793a","webpack:///./src/utils/crmRequest.js","webpack:///./src/api/assistantManage.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","sourceSearch","model","value","callback","$$v","$set","expression","_l","item","key","label","staticStyle","on","onSubmit","_v","resetForm","$event","setChannelInfo","list","hasListInfo","scopedSlots","_u","fn","scope","row","delShow","rowInfo","currentPage","pageSize","count","handleSizeChange","handleCurrentChange","slot","delConfirm","channelTitle","channelShow","channelForm","required","message","target","inputFormSubmit","_s","btnText","staticRenderFns","data","isOpen","sourceChannel","name","type","keyWord","sourceChannelList","typeList","classA","classB","classC","classAList","classBList","isAssignment","watch","newValue","v","classInfo","first","second","setTimeout","created","getChannelList","methods","val","num","$refs","formName","validate","valid","component","service","axios","create","baseURL","process","timeout","interceptors","request","use","config","store","getters","token","headers","getToken","error","console","log","Promise","reject","response","res","url","indexOf","code","router","push","Message","duration","dispatch","then","location","reload","Error","getHelperList","params","method","getAdminList","getHelper","createHelper","matchingHelper","id","updateHelper","deleteHelper","createChannel","updateChannel","deleteChannel","getUserTypeList","createUserType","updateUserType","deleteUserType","getFollowList","createFollow","updateFollow","deleteFollow","setStatus","getCurrentList","getUserInfo","getFollowLog","getUserType","getOrderList","addSource","putSource","getSourceDetail","deleteSource","getSourceList","getQrcode","getCodeList","createProgramCode","deleteProgramCode","downloadCode"],"mappings":"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","file":"static/js/chunk-eff8510c.c7837958.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"source-channel\"},[_c('el-form',{ref:\"sourceSearch\",attrs:{\"label-position\":\"left\",\"label-width\":\"80px\",\"model\":_vm.sourceSearch,\"inline\":\"\"}},[_c('el-form-item',{staticClass:\"search-item\",attrs:{\"label\":\"关键词\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"请输入关键词\"},model:{value:(_vm.sourceSearch.keyWord),callback:function ($$v) {_vm.$set(_vm.sourceSearch, \"keyWord\", $$v)},expression:\"sourceSearch.keyWord\"}})],1),_c('el-form-item',{staticClass:\"search-item\",attrs:{\"label\":\"渠道类型\"}},[_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"请选择渠道类型\"},model:{value:(_vm.sourceSearch.type),callback:function ($$v) {_vm.$set(_vm.sourceSearch, \"type\", $$v)},expression:\"sourceSearch.type\"}},_vm._l((_vm.typeList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{staticClass:\"search-item\",attrs:{\"label\":\"创建人\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"请输入创建人\"},model:{value:(_vm.sourceSearch.name),callback:function ($$v) {_vm.$set(_vm.sourceSearch, \"name\", $$v)},expression:\"sourceSearch.name\"}})],1),_c('el-form-item',{staticStyle:{\"float\":\"right\"}},[_c('el-button',{staticClass:\"select-btn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"查询\")]),_c('el-button',{staticClass:\"select-btn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.resetForm}},[_vm._v(\"重置\")])],1)],1),_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"title\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.setChannelInfo(1)}}},[_vm._v(\"新增来源渠道\")])],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.list,\"border\":\"\",\"empty-text\":_vm.hasListInfo}},[_c('el-table-column',{attrs:{\"fixed\":\"\",\"prop\":\"num\",\"label\":\"序号\",\"width\":\"100\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"classA\",\"label\":\"一级来源\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"classB\",\"label\":\"二级来源\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"classC\",\"label\":\"三级来源\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"founder\",\"label\":\"创建人\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":\"渠道类型\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"created_at\",\"label\":\"创建时间\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"200\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.setChannelInfo(2, scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){_vm.delShow = true\n              _vm.rowInfo = scope.row}}},[_vm._v(\"删除\")])]}}])})],1),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-sizes\":[10, 20, 50],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.count},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_c('el-dialog',{attrs:{\"title\":\"删除提示\",\"visible\":_vm.delShow,\"width\":\"400px\",\"center\":\"\",\"top\":\"30vh\"},on:{\"update:visible\":function($event){_vm.delShow=$event}}},[_c('p',{staticClass:\"center\"},[_vm._v(\"\\n      删除后，该渠道信息将不存在，\\n      \"),_c('br'),_vm._v(\"请确定是否删除？\\n    \")]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.delConfirm}},[_vm._v(\"确 定\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.delShow = false}}},[_vm._v(\"取 消\")])],1)]),_c('el-dialog',{attrs:{\"title\":_vm.channelTitle,\"visible\":_vm.channelShow,\"width\":\"400px\",\"center\":\"\",\"top\":\"30vh\"},on:{\"update:visible\":function($event){_vm.channelShow=$event}}},[_c('el-form',{ref:\"channelForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.channelForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"渠道类型\",\"prop\":\"type\",\"rules\":_vm.channelShow\n            ? [{ required: true, message: '请选择', target: 'blur' }]\n            : {}}},[_c('el-select',{attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"clearable\":\"\",\"placeholder\":\"请选择渠道类型\"},model:{value:(_vm.channelForm.type),callback:function ($$v) {_vm.$set(_vm.channelForm, \"type\", $$v)},expression:\"channelForm.type\"}},_vm._l((_vm.typeList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"一级来源\",\"prop\":\"classA\",\"rules\":_vm.channelShow ? [{ required: true, message: '请选择' }] : {}}},[_c('el-select',{attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"clearable\":\"\",\"placeholder\":\"请选择一级来源\"},model:{value:(_vm.channelForm.classA),callback:function ($$v) {_vm.$set(_vm.channelForm, \"classA\", $$v)},expression:\"channelForm.classA\"}},_vm._l((_vm.classAList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"二级来源\",\"prop\":\"classB\",\"rules\":_vm.channelShow ? [{ required: true, message: '请选择' }] : {}}},[_c('el-select',{attrs:{\"filterable\":\"\",\"allow-create\":\"\",\"clearable\":\"\",\"placeholder\":\"请选择二级来源\"},model:{value:(_vm.channelForm.classB),callback:function ($$v) {_vm.$set(_vm.channelForm, \"classB\", $$v)},expression:\"channelForm.classB\"}},_vm._l((_vm.classBList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"三级来源\",\"prop\":\"classC\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"请输入三级来源\"},model:{value:(_vm.channelForm.classC),callback:function ($$v) {_vm.$set(_vm.channelForm, \"classC\", $$v)},expression:\"channelForm.classC\"}})],1),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.inputFormSubmit('channelForm')}}},[_vm._v(\"\\n          \"+_vm._s(_vm.btnText)+\"\\n        \")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"source-channel\">\r\n    <!--  搜索  -->\r\n    <el-form\r\n      ref=\"sourceSearch\"\r\n      label-position=\"left\"\r\n      label-width=\"80px\"\r\n      :model=\"sourceSearch\"\r\n      inline\r\n    >\r\n      <el-form-item label=\"关键词\" class=\"search-item\">\r\n        <el-input\r\n          v-model=\"sourceSearch.keyWord\"\r\n          clearable\r\n          placeholder=\"请输入关键词\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"渠道类型\" class=\"search-item\">\r\n        <el-select\r\n          v-model=\"sourceSearch.type\"\r\n          clearable\r\n          placeholder=\"请选择渠道类型\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in typeList\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"创建人\" class=\"search-item\">\r\n        <el-input\r\n          v-model=\"sourceSearch.name\"\r\n          clearable\r\n          placeholder=\"请输入创建人\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item style=\"float: right\">\r\n        <el-button type=\"primary\" class=\"select-btn\" @click=\"onSubmit\"\r\n          >查询</el-button\r\n        >\r\n        <el-button type=\"primary\" class=\"select-btn\" @click=\"resetForm\"\r\n          >重置</el-button\r\n        >\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--  列表  -->\r\n    <div class=\"list\">\r\n      <div class=\"title\">\r\n        <el-button type=\"primary\" @click=\"setChannelInfo(1)\"\r\n          >新增来源渠道</el-button\r\n        >\r\n      </div>\r\n      <el-table\r\n        :data=\"list\"\r\n        style=\"width: 100%\"\r\n        border\r\n        :empty-text=\"hasListInfo\"\r\n      >\r\n        <el-table-column\r\n          fixed\r\n          prop=\"num\"\r\n          label=\"序号\"\r\n          width=\"100\"\r\n          align=\"center\"\r\n        />\r\n        <el-table-column prop=\"classA\" label=\"一级来源\" align=\"center\" />\r\n        <el-table-column prop=\"classB\" label=\"二级来源\" align=\"center\" />\r\n        <el-table-column prop=\"classC\" label=\"三级来源\" align=\"center\" />\r\n        <el-table-column prop=\"founder\" label=\"创建人\" align=\"center\" />\r\n        <el-table-column prop=\"type\" label=\"渠道类型\" align=\"center\" />\r\n        <el-table-column prop=\"created_at\" label=\"创建时间\" align=\"center\" />\r\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"200\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              @click=\"setChannelInfo(2, scope.row)\"\r\n              >编辑</el-button\r\n            >\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              @click=\"\r\n                delShow = true\r\n                rowInfo = scope.row\r\n              \"\r\n              >删除</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[10, 20, 50]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"count\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <el-dialog\r\n      title=\"删除提示\"\r\n      :visible.sync=\"delShow\"\r\n      width=\"400px\"\r\n      center\r\n      top=\"30vh\"\r\n    >\r\n      <p class=\"center\">\r\n        删除后，该渠道信息将不存在，\r\n        <br />请确定是否删除？\r\n      </p>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"delConfirm\">确 定</el-button>\r\n        <el-button type=\"primary\" @click=\"delShow = false\">取 消</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog\r\n      :title=\"channelTitle\"\r\n      :visible.sync=\"channelShow\"\r\n      width=\"400px\"\r\n      center\r\n      top=\"30vh\"\r\n    >\r\n      <el-form\r\n        :model=\"channelForm\"\r\n        ref=\"channelForm\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item\r\n          label=\"渠道类型\"\r\n          prop=\"type\"\r\n          :rules=\"\r\n            channelShow\r\n              ? [{ required: true, message: '请选择', target: 'blur' }]\r\n              : {}\r\n          \"\r\n        >\r\n          <el-select\r\n            v-model=\"channelForm.type\"\r\n            filterable\r\n            allow-create\r\n            clearable\r\n            placeholder=\"请选择渠道类型\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in typeList\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"一级来源\"\r\n          prop=\"classA\"\r\n          :rules=\"channelShow ? [{ required: true, message: '请选择' }] : {}\"\r\n        >\r\n          <el-select\r\n            v-model=\"channelForm.classA\"\r\n            filterable\r\n            allow-create\r\n            clearable\r\n            placeholder=\"请选择一级来源\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in classAList\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n          label=\"二级来源\"\r\n          prop=\"classB\"\r\n          :rules=\"channelShow ? [{ required: true, message: '请选择' }] : {}\"\r\n        >\r\n          <el-select\r\n            v-model=\"channelForm.classB\"\r\n            filterable\r\n            allow-create\r\n            clearable\r\n            placeholder=\"请选择二级来源\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in classBList\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"三级来源\" prop=\"classC\">\r\n          <el-input\r\n            v-model=\"channelForm.classC\"\r\n            clearable\r\n            placeholder=\"请输入三级来源\"\r\n          />\r\n        </el-form-item>\r\n        <div style=\"text-align: center\">\r\n          <el-button type=\"primary\" @click=\"inputFormSubmit('channelForm')\">\r\n            {{ btnText }}\r\n          </el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getChannelList,\r\n  createChannel,\r\n  updateChannel,\r\n  deleteChannel\r\n} from '@/api/assistantManage'\r\nexport default {\r\n  data() {\r\n    return {\r\n      isOpen: false,\r\n      list: [],\r\n      currentPage: 1,\r\n      delShow: false,\r\n      channelShow: false,\r\n      channelTitle: '',\r\n      btnText: '',\r\n      pageSize: 10,\r\n      count: 0,\r\n      rowInfo: '',\r\n      hasListInfo: '暂无数据',\r\n      sourceSearch: {\r\n        sourceChannel: '',\r\n        name: '',\r\n        type: '',\r\n        keyWord: ''\r\n      },\r\n      sourceChannelList: [],\r\n      typeList: [\r\n        {\r\n          value: '公众号',\r\n          label: '公众号',\r\n          first: [\r\n            { value: '宝宝呵护', label: '宝宝呵护' },\r\n            { value: '十月呵护', label: '十月呵护' },\r\n            { value: '宝宝呵护约苗', label: '宝宝呵护约苗' },\r\n            { value: '来问十月菌', label: '来问十月菌' }\r\n          ],\r\n          second: [\r\n            { value: '推文', label: '推文' },\r\n            { value: '欢迎语', label: '欢迎语' },\r\n            { value: '菜单栏', label: '菜单栏' },\r\n            { value: '推文评论区', label: '推文评论区' },\r\n            { value: '关键词回复', label: '关键词回复' },\r\n            { value: '阅读原文', label: '阅读原文' }\r\n          ]\r\n        },\r\n        {\r\n          value: '社群',\r\n          label: '社群',\r\n          first: [\r\n            { value: '内部社群', label: '内部社群' },\r\n            { value: '外部社群', label: '外部社群' }\r\n          ],\r\n          second: [{ value: '电商社群', label: '电商社群' }]\r\n        },\r\n        {\r\n          value: '小程序',\r\n          label: '小程序',\r\n          first: [],\r\n          second: []\r\n        },\r\n        {\r\n          value: '线下',\r\n          label: '线下',\r\n          first: [],\r\n          second: []\r\n        },\r\n        {\r\n          value: '视频',\r\n          label: '视频',\r\n          first: [\r\n            { value: '抖音', label: '抖音' },\r\n            { value: '头条', label: '头条' },\r\n            { value: '火山', label: '火山' },\r\n            { value: '快手', label: '快手' }\r\n          ],\r\n          second: []\r\n        },\r\n        {\r\n          value: '其它',\r\n          label: '其它',\r\n          first: [\r\n            { value: '书签', label: '书签' },\r\n            { value: '用户推荐', label: '用户推荐' }\r\n          ],\r\n          second: []\r\n        }\r\n      ],\r\n      channelForm: {\r\n        type: '',\r\n        classA: '',\r\n        classB: '',\r\n        classC: ''\r\n      },\r\n      classAList: [],\r\n      classBList: [],\r\n      isAssignment: false\r\n    }\r\n  },\r\n  watch: {\r\n    'channelForm.type'(newValue) {\r\n      if (!this.isAssignment) {\r\n        this.channelForm.classA = ''\r\n        this.channelForm.classB = ''\r\n        if (newValue) {\r\n          const classInfo = this.typeList.filter(v => {\r\n            return v.value === newValue\r\n          })[0]\r\n          this.classAList = classInfo && classInfo.first\r\n          this.classBList = classInfo && classInfo.second\r\n        }\r\n      }\r\n    },\r\n    'channelForm.classA'(newValue) {\r\n      if (!this.isAssignment) {\r\n        if (newValue === '外部社群') {\r\n          this.classBList = []\r\n        }\r\n        if (newValue === '内部社群') {\r\n          this.classBList = [{ value: '电商社群', label: '电商社群' }]\r\n        }\r\n        this.channelForm.classB = ''\r\n      }\r\n    },\r\n    channelShow(value) {\r\n      if (!value) {\r\n        this.channelForm = {\r\n          type: '',\r\n          classA: '',\r\n          classB: '',\r\n          classC: ''\r\n        }\r\n      }\r\n    },\r\n    isAssignment(value) {\r\n      if (value) {\r\n        setTimeout(() => {\r\n          this.isAssignment = false\r\n        }, 500)\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getChannelList()\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      this.currentPage = 1\r\n      this.getChannelList(this.sourceSearch)\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.getChannelList(this.sourceSearch)\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.getChannelList(this.sourceSearch)\r\n    },\r\n    resetForm() {\r\n      this.sourceSearch = {\r\n        sourceChannel: '',\r\n        name: '',\r\n        type: '',\r\n        keyWord: ''\r\n      }\r\n      this.getChannelList()\r\n    },\r\n    async delConfirm() {\r\n      const { code, message } = await deleteChannel(this.rowInfo.id)\r\n      if (code === 10000) {\r\n        this.$message.success(message)\r\n        this.getChannelList(this.sourceSearch)\r\n        this.delShow = false\r\n      }\r\n    },\r\n    setChannelInfo(num, row) {\r\n      if (num === 1) {\r\n        this.channelTitle = '新增来源渠道'\r\n        this.btnText = '确认新增'\r\n      } else if (num === 2) {\r\n        this.isAssignment = true\r\n        this.channelTitle = '编辑来源渠道'\r\n        this.btnText = '确认编辑'\r\n        this.channelForm = {\r\n          type: row.type,\r\n          classA: row.classA,\r\n          classB: row.classB,\r\n          classC: row.classC\r\n        }\r\n      }\r\n      this.rowInfo = row || {}\r\n      this.rowInfo.num = num\r\n      this.channelShow = true\r\n    },\r\n    inputFormSubmit(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          if (this.rowInfo.num === 1) this.createChannel()\r\n          if (this.rowInfo.num === 2) this.updateChannel()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    async getChannelList(search) {\r\n      let params = {\r\n        pageSize: this.pageSize,\r\n        page: this.currentPage\r\n      }\r\n      if (search) {\r\n        if (search.name) params.creator_name = search.name\r\n        if (search.type) params.source_type = search.type\r\n        if (search.keyWord) params.key_word = search.keyWord\r\n        this.hasListInfo = '暂无数据，请重新输入关键词'\r\n      } else {\r\n        this.hasListInfo = '暂无数据'\r\n      }\r\n      const { data, code } = await getChannelList(params)\r\n      if (code === 10000) {\r\n        this.count = data.count\r\n        this.list = data.list.map((item, index) => {\r\n          return {\r\n            num: (this.currentPage - 1) * this.pageSize + index + 1,\r\n            classA: item.first_name === '无可选项' ? '/' : item.first_name,\r\n            classB: item.second_name === '无可选项' ? '/' : item.second_name,\r\n            classC: item.three_name || '/',\r\n            founder: item.creator_name,\r\n            type: item.source_type,\r\n            created_at: item.created_at\r\n              ? this.formatTime(item.created_at)\r\n              : '-',\r\n            id: item._id\r\n          }\r\n        })\r\n      }\r\n    },\r\n    async createChannel() {\r\n      const data = {\r\n        source_type: this.channelForm.type,\r\n        first_name: this.channelForm.classA,\r\n        second_name: this.channelForm.classB,\r\n        three_name: this.channelForm.classC\r\n      }\r\n      const { code, message } = await createChannel(data)\r\n      if (code === 10000) {\r\n        this.$message.success(message)\r\n        this.getChannelList(this.sourceSearch)\r\n        this.channelShow = false\r\n      }\r\n    },\r\n    async updateChannel() {\r\n      const data = {\r\n        source_type: this.channelForm.type,\r\n        first_name: this.channelForm.classA,\r\n        second_name: this.channelForm.classB,\r\n        three_name: this.channelForm.classC\r\n      }\r\n      const { code, message } = await updateChannel(this.rowInfo.id, data)\r\n      if (code === 10000) {\r\n        this.$message.success(message)\r\n        this.getChannelList(this.sourceSearch)\r\n        this.channelShow = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.source-channel {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n  /deep/form {\r\n    width: 100%;\r\n    .el-date-editor {\r\n      padding: 0 10px;\r\n      width: 220px;\r\n      height: 32px;\r\n      .el-range-input {\r\n        width: 85px;\r\n        height: 30px;\r\n      }\r\n    }\r\n  }\r\n  .search-item {\r\n    color: #17233d;\r\n    &:not(:nth-child(4)) {\r\n      margin-right: 50px;\r\n    }\r\n    /deep/input {\r\n      width: 220px;\r\n      height: 32px;\r\n      line-height: 32px;\r\n    }\r\n    /deep/span {\r\n      top: -3px;\r\n    }\r\n    /deep/.el-input__suffix {\r\n      top: 0;\r\n    }\r\n  }\r\n  .select-btn {\r\n    padding: 0 20px;\r\n    width: 68px;\r\n    height: 32px;\r\n  }\r\n  .arrow {\r\n    float: right;\r\n  }\r\n  .list {\r\n    margin: 20px 0 0;\r\n    width: 100%;\r\n    .title {\r\n      line-height: 32px;\r\n      text-align: right;\r\n      /deep/button {\r\n        margin-bottom: 10px;\r\n        padding: 6px 20px;\r\n        height: 32px;\r\n      }\r\n    }\r\n    /deep/.el-dialog__wrapper {\r\n      button {\r\n        padding: 6px 20px;\r\n        height: 32px;\r\n      }\r\n      .el-dialog__headerbtn {\r\n        top: 10px;\r\n        right: 5px;\r\n      }\r\n    }\r\n    .pagination {\r\n      margin-top: 50px;\r\n      text-align: center;\r\n    }\r\n  }\r\n  /deep/.cell {\r\n    overflow: hidden;\r\n    -ms-text-overflow: ellipsis;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    *:not(button) {\r\n      display: inline-block;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .center {\r\n    line-height: 20px;\r\n    text-align: center;\r\n  }\r\n  .button-wrap {\r\n    button {\r\n      height: 32px;\r\n      line-height: 0;\r\n    }\r\n  }\r\n  .danger-tip {\r\n    margin-top: 10px;\r\n    line-height: 16px;\r\n    color: #f00;\r\n  }\r\n  .el-dialog__wrapper {\r\n    /deep/.el-input__inner {\r\n      width: 220px;\r\n    }\r\n  }\r\n  .demo-ruleForm {\r\n    /deep/.el-input {\r\n      width: 220px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=076a6274&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=076a6274&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"076a6274\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=076a6274&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=076a6274&lang=scss&scoped=true&\"","import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport router from '@/router'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// const baseUrl = process.env.NODE_ENV === process.env.VUE_APP_BASE_CRM_API\r\n\r\n// create an axios instance\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_CRM_API, // url = base url + request url\r\n  // withCredentials: true, // send cookies when cross-domain requests\r\n  timeout: 200000 // request timeout\r\n})\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // do something before request is sent\r\n    // 使用mock地址或者真实地址\r\n    if (process.env.NODE_ENV === 'development' && config.mock) {\r\n      config.url = process.env.VUE_APP_MOCK_API + config.url\r\n    }\r\n\r\n    if (store.getters.token) {\r\n      // let each request carry token\r\n      // ['Authorization'] is a custom headers key\r\n      // please modify it according to the actual situation\r\n      config.headers['Authorization'] = getToken()\r\n    }\r\n\r\n    return config\r\n  },\r\n  error => {\r\n    // do something with request error\r\n    console.log(error) // for debug\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n   */\r\n\r\n  /**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   */\r\n  response => {\r\n    const config = response.config\r\n    const res = response.data\r\n    // if the custom code is not 20000, it is judged as an error.\r\n    if (config.url.indexOf(config.baseURL) > -1 && res.code !== 10000) {\r\n      // 没有 api 权限\r\n      if (res.code === 40001) {\r\n        router.push('/404')\r\n        return Promise.reject()\r\n      }\r\n\r\n      Message({\r\n        message: res.message || 'Error',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n\r\n      // 403 超时的访问 401 未授权的访问\r\n      if (res.code === 401) {\r\n        store.dispatch('user/resetToken').then(() => {\r\n          location.reload()\r\n        })\r\n      }\r\n\r\n      return Promise.reject(new Error(res.message || 'Error'))\r\n    } else {\r\n      /* if (res.data && res.data.result === false) {\r\n        Message({\r\n          message: res.data.message || 'Error',\r\n          type: 'error',\r\n          duration: 5 * 1000\r\n        })\r\n      }*/\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.log('err' + error) // for debug\r\n    Message({\r\n      message: error.message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import request from '@/utils/crmRequest'\r\n\r\n/********* 小助手管理 ************/\r\n\r\n// 获取小助手列表\r\nexport function getHelperList(params) {\r\n  return request({\r\n    url: '/corp/wechat/helper',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取员工列表\r\nexport function getAdminList(params) {\r\n  return request({\r\n    url: '/corp/admin',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取列表\r\nexport function getHelper(params) {\r\n  return request({\r\n    url: '/corp/helper',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 创建小助手\r\nexport function createHelper(data) {\r\n  return request({\r\n    url: '/corp/helper',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 匹配运营人员\r\nexport function matchingHelper(id, data) {\r\n  return request({\r\n    url: '/corp/helper/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 更改运营人员\r\nexport function updateHelper(id, data) {\r\n  return request({\r\n    url: '/corp/helper/change/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除小助手\r\nexport function deleteHelper(id) {\r\n  return request({\r\n    url: '/corp/helper/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n/********* 小助手管理 ************/\r\n\r\n/********* 来源渠道管理 ************/\r\n\r\n// 获取渠道列表\r\nexport function getChannelList(params) {\r\n  return request({\r\n    url: '/corp/source_channel',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 新增渠道\r\nexport function createChannel(data) {\r\n  return request({\r\n    url: '/corp/source_channel',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新渠道\r\nexport function updateChannel(id, data) {\r\n  return request({\r\n    url: '/corp/source_channel/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除渠道\r\nexport function deleteChannel(id) {\r\n  return request({\r\n    url: '/corp/source_channel/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n/********* 来源渠道管理 ************/\r\n\r\n/********* 用户类型管理 ************/\r\n\r\n// 获取用户类型列表\r\nexport function getUserTypeList(params) {\r\n  return request({\r\n    url: '/corp/user_type',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 新增渠道\r\nexport function createUserType(data) {\r\n  return request({\r\n    url: '/corp/user_type',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新渠道\r\nexport function updateUserType(id, data) {\r\n  return request({\r\n    url: '/corp/user_type/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除渠道\r\nexport function deleteUserType(id) {\r\n  return request({\r\n    url: '/corp/user_type/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n/********* 用户类型管理 ************/\r\n\r\n/********* 跟进操作管理 ************/\r\n\r\n// 获取用户类型列表\r\nexport function getFollowList(params) {\r\n  return request({\r\n    url: '/corp/user_visit',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 新增渠道\r\nexport function createFollow(data) {\r\n  return request({\r\n    url: '/corp/user_visit',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新渠道\r\nexport function updateFollow(id, data) {\r\n  return request({\r\n    url: '/corp/user_visit/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除渠道\r\nexport function deleteFollow(id) {\r\n  return request({\r\n    url: '/corp/user_visit/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 改变状态\r\nexport function setStatus(id) {\r\n  return request({\r\n    url: '/corp/user_visit/status/' + id,\r\n    method: 'put'\r\n  })\r\n}\r\n\r\n/********* 跟进操作管理 ************/\r\n\r\n/********* 用户管理 ************/\r\n\r\n// 获取用户列表\r\nexport const getCurrentList = params => {\r\n  return request({\r\n    url: 'corp/user',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取用户信息\r\nexport const getUserInfo = id => {\r\n  return request({\r\n    url: 'corp/admin/crm_user/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取跟进列表\r\nexport const getFollowLog = params => {\r\n  return request({\r\n    url: 'corp/follow_up_log',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取用户来源\r\nexport const getUserType = params => {\r\n  return request({\r\n    url: 'corp/source_channel',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取订单列表\r\nexport const getOrderList = id => {\r\n  return request({\r\n    url: 'corp/admin/order/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/********* 用户管理 ************/\r\n\r\n/********* 渠道场景管理 ************/\r\n\r\n// 创建\r\nexport const addSource = data => {\r\n  return request({\r\n    url: 'corp/admin/scene',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新\r\nexport const putSource = (id, data) => {\r\n  return request({\r\n    url: 'corp/admin/scene/' + id,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取详情\r\nexport const getSourceDetail = id => {\r\n  return request({\r\n    url: 'corp/admin/scene/detail/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 删除\r\nexport const deleteSource = id => {\r\n  return request({\r\n    url: 'corp/admin/scene/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 获取列表\r\nexport const getSourceList = params => {\r\n  return request({\r\n    url: 'corp/admin/scene',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取二维码qrcode\r\nexport const getQrcode = id => {\r\n  return request({\r\n    url: 'corp/admin/scene/qrcode/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n/********* 渠道场景管理 ************/\r\n\r\n/********* 小程序码管理 ************/\r\n\r\n// 获取列表\r\nexport const getCodeList = params => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 创建小程序码\r\nexport const createProgramCode = data => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除小程序码\r\nexport const deleteProgramCode = id => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode/' + id,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 下载小程序码\r\nexport const downloadCode = params => {\r\n  return request({\r\n    url: 'corp/admin/wx_qrcode/download',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n/********* 小程序码管理 ************/\r\n"],"sourceRoot":""}